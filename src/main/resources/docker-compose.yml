version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ messaging port
      - "15672:15672" # RabbitMQ management UI
    environment:
      RABBITMQ_DEFAULT_USER: task_user
      RABBITMQ_DEFAULT_PASS: strong_password
    networks:
      - backend

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: taskscheduler
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  # Uncomment the following to run the Spring Boot app in Docker:
  #
  # app:
  #   build: .
  #   container_name: taskscheduler-app
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - postgres
  #     - rabbitmq
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/taskscheduler
  #     SPRING_DATASOURCE_USERNAME: postgres
  #     SPRING_DATASOURCE_PASSWORD: postgres
  #     SPRING_RABBITMQ_HOST: rabbitmq
  #     SPRING_RABBITMQ_USERNAME: task_user
  #     SPRING_RABBITMQ_PASSWORD: strong_password
  #   networks:
  #     - backend

volumes:
  pgdata:

networks:
  backend:
